[package]
name = "rand"
version = "0.10.0-rc.0"
authors = ["The Rand Project Developers", "The Rust Project Developers"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/rust-random/rand"
documentation = "https://docs.rs/rand"
homepage = "https://rust-random.github.io/book"
description = """
Random number generators and other randomness functionality.
"""
keywords = ["random", "rng"]
categories = ["algorithms", "no-std"]
autobenches = true
edition = "2024"
rust-version = "1.85"
include = ["src/", "LICENSE-*", "README.md", "CHANGELOG.md", "COPYRIGHT"]

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg docsrs -Zunstable-options --generate-link-to-definition" cargo +nightly doc --all --all-features --no-deps --open
all-features = true
rustdoc-args = ["--generate-link-to-definition"]

[package.metadata.playground]
features = ["small_rng", "serde"]

[features]
# Meta-features:
default = ["std", "std_rng", "os_rng", "small_rng", "thread_rng"]
nightly = [] # some additions requiring nightly Rust
serde = ["dep:serde", "rand_core/serde"]

# Option (enabled by default): without "std" rand uses libcore; this option
# enables functionality expected to be available on a standard platform.
std = ["alloc", "getrandom?/std"]

# Option: "alloc" enables support for Vec and Box when not using "std"
alloc = []

# Option: enable OsRng
os_rng = ["dep:getrandom"]

# Option (requires nightly Rust): experimental SIMD support
simd_support = []

# Option (enabled by default): enable StdRng
std_rng = ["dep:chacha20"]

# Option: enable SmallRng
small_rng = []

# Option: enable ThreadRng and rng()
thread_rng = ["std", "std_rng", "os_rng"]

# Option: enable rand::rngs::ChaCha*Rng
chacha = ["dep:chacha20"]

# Option: use unbiased sampling for algorithms supporting this option: Uniform distribution.
# By default, bias affecting no more than one in  2^48 samples is accepted.
# Note: enabling this option is expected to affect reproducibility of results.
unbiased = []

# Option: enable logging
log = ["dep:log"]

[workspace]
members = [
    "rand_core",
    "rand_chacha",
    "rand_pcg",
]
exclude = ["benches", "distr_test"]

# Force chacha20 to use the local rand_code to avoid compiling two different "rand_core"s.
# This is necessary even if the specified versions are the same.
[patch.crates-io]
rand_core = { path = "rand_core" }

[dependencies]
rand_core = { path = "rand_core", version = "0.10.0-rc.1", default-features = false }
log = { version = "0.4.4", optional = true }
serde = { version = "1.0.103", features = ["derive"], optional = true }
chacha20 = { version = "=0.10.0-rc.2", default-features = false, features = ["rng"], optional = true }
getrandom = { version = "0.3.0", optional = true }

[dev-dependencies]
rand_pcg = { path = "rand_pcg", version = "0.9.0" }
# Only to test serde
bincode = "1.2.1"
rayon = "1.7"
serde_json = "1.0.140"
